FROM ubuntu:16.04
MAINTAINER Lee Rhodes

USER root

RUN  echo "deb http://archive.ubuntu.com/ubuntu xenial main universe\n" > /etc/apt/sources.list \
  && echo "deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\n" >> /etc/apt/sources.list \
  && echo "deb http://security.ubuntu.com/ubuntu xenial-security main universe\n" >> /etc/apt/sources.list

ENV DEBIAN_FRONTEND=noninteractive \
    DEBCONF_NONINTERACTIVE_SEEN=true

RUN apt-get -qqy update \
  && apt-get -qqy --no-install-recommends install \
    bzip2 \
    ca-certificates \
    openjdk-8-jre-headless \
    tzdata \
    sudo \
    unzip \
    wget \
  && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \
  && sed -i 's/securerandom\.source=file:\/dev\/random/securerandom\.source=file:\/dev\/urandom/' ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security

# ARG FIREFOX_VERSION=57.0
# RUN apt-get update -qqy \
#   && apt-get -qqy --no-install-recommends install firefox \
#   && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \
#   && wget --no-verbose -O /tmp/firefox.tar.bz2 https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2 \
#   && apt-get -y purge firefox \
#   && rm -rf /opt/firefox \
#   && tar -C /opt -xjf /tmp/firefox.tar.bz2 \
#   && rm /tmp/firefox.tar.bz2 \
#   && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \
#   && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/bin/firefox

# ARG GECKODRIVER_VERSION=0.19.1
# RUN wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz \
#   && rm -rf /opt/geckodriver \
#   && tar -C /opt -zxf /tmp/geckodriver.tar.gz \
#   && rm /tmp/geckodriver.tar.gz \
#   && mv /opt/geckodriver /opt/geckodriver-$GECKODRIVER_VERSION \
#   && chmod 755 /opt/geckodriver-$GECKODRIVER_VERSION \
#   && ln -fs /opt/geckodriver-$GECKODRIVER_VERSION /usr/bin/geckodriver

# CONFIG
# ENV SCREEN_WIDTH 1360
# ENV SCREEN_HEIGHT 1020
# ENV SCREEN_DEPTH 24
# ENV DISPLAY localhost:1.0

ARG CHROME_VERSION="google-chrome-stable"
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
  && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list \
  && apt-get update -qqy \
  && apt-get -qqy install \
    ${CHROME_VERSION:-google-chrome-stable} \
  && rm /etc/apt/sources.list.d/google-chrome.list \
  && rm -rf /var/lib/apt/lists/* /var/cache/apt/*

# COPY wrap_chrome_binary /opt/bin/wrap_chrome_binary
# RUN /opt/bin/wrap_chrome_binary

ARG CHROME_DRIVER_VERSION="latest"
RUN CD_VERSION=$(if [ ${CHROME_DRIVER_VERSION:-latest} = "latest" ]; then echo $(wget -qO- https://chromedriver.storage.googleapis.com/LATEST_RELEASE); else echo $CHROME_DRIVER_VERSION; fi) \
  && echo "Using chromedriver version: "$CD_VERSION \
  && wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CD_VERSION/chromedriver_linux64.zip \
  && rm -rf /opt/selenium/chromedriver \
  && unzip /tmp/chromedriver_linux64.zip -d /opt/selenium \
  && rm /tmp/chromedriver_linux64.zip \
  && mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CD_VERSION \
  && chmod 755 /opt/selenium/chromedriver-$CD_VERSION \
  && sudo ln -fs /opt/selenium/chromedriver-$CD_VERSION /usr/bin/chromedriver

# XVFB and VCN
RUN apt-get update -qqy \
  && apt-get -qqy install \
    locales \
    xvfb \
  && rm -rf /var/lib/apt/lists/* /var/cache/apt/*

#Install Ruby and Cucumber

RUN apt-get update

RUN apt-get install -y ruby2.3 ruby2.3-dev
RUN apt-get install -y imagemagick libmagickwand-dev
RUN apt-get install -y git
RUN apt-get install -y build-essential
RUN apt-get clean

RUN gem install bundler

# avoid warning: Don't run Bundler as root
RUN bundle config --global silence_root_warning 1

# avoid warning: The gift source `git://github.com/dwbutler/logstash-logger.git` uses the `git` protocol, which transmits data without encryption. Disable this warning with `bundle config git.allow_insecure true`, or switch to the `https` protocol to keep your data secure.
RUN bundle config --global git.allow_insecure true

# add gems
ADD Gemfile* /
RUN bundle install

# set timezone
ENV TZ=Europe/London
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
